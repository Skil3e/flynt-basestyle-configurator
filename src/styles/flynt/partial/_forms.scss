/**
* 1.3 Forms
*
* Global form elements, including structuring wrapper elements.
*/
@use "../mixins" as *;
@use "../variables" as *;


form {
	margin : 0;
}

fieldset {
	padding : 0;
	border  : 0;
	margin  : 0 0 var(--p-margin);

	*:last-child {
		margin-bottom : 0;
	}

	input,
	select,
	textarea {
		margin : 0 0 var(--_input-fieldset-spacing);
	}
}

legend {
	display          : inline-block;
	margin-block-end : var(--_legend-margin-bottom);
	font-size        : var(--_legend-font-size);
}

label {
	display          : inline-block;
	margin-block-end : var(--_label-margin-bottom);
	font-size        : var(--_label-font-size);
	font-weight      : var(--_label-font-wight);
	line-height      : var(--_label-line-height);
}

#{$input-selectors} {
	min-block-size   : var(--_input-min-height);
	border           : var(--_input-border-width) var(--_input-border-style) var(--_input-color-border);
	appearance       : none;
	background-color : transparent;
	border-radius    : var(--_input-border-radius);
	color            : var(--color-headline);
	font-family      : inherit;
	font-size        : var(--_input-font-size);
	line-height      : var(--_input-line-height);
	outline          : none;
	transition       : border-color 0.2s ease, box-shadow 0.2s ease;

	&::placeholder {
		color   : var(--color-text);
		opacity : var(--opacity-grayed-out);
	}

	&:focus {
		box-shadow : 0 0 0 3px var(--color-accent-alpha);
	}

	&:disabled {
		border-color     : var(--_input-color-border-disabled);
		background-color : var(--_input-color-background-disabled);
		color            : var(--_input-color-text-disabled);
		opacity          : var(--opacity-grayed-out);
	}
}

.input-validation-error {
	--_input-color-border : var(--color-error);
}

input,
select,
textarea {
	padding-block  : var(--_input-padding-block);
	padding-inline : var(--_input-padding-inline);
	margin         : 0 0 var(--_input-spacing);
}

textarea {
	inline-size    : 100%;
	min-block-size : 150px;
	padding        : var(--_input-padding-inline);
	line-height    : var(--line-height);
	resize         : vertical;
	vertical-align : top;
}

select {
	padding-right       : 45px;
	background-image    : url("data:image/svg+xml;charset=utf8,%3Csvg width='32' height='32' xmlns='http://www.w3.org/2000/svg'%3E%3Cpolyline fill='none' stroke='%23414751' stroke-width='5'  points='2,9 16,25 30,9 '/%3E%3C/svg%3E");
	background-position : calc(100% - 18px) center;
	background-repeat   : no-repeat;
	background-size     : 9px;
	line-height         : var(--line-height);

	&::-ms-expand {
		display : none;
	}
}

//////////////////////////// Refactor from here up is done ^

.select {
	position       : relative;
	display        : inline-block;
	vertical-align : top;

	&::after {
		position      : absolute;
		z-index       : 1;
		top           : calc(50% - 6px);
		right         : 20px;
		width         : 8px;
		height        : 8px;
		border-bottom : var(--border-width) solid var(--color-headline);
		border-left   : var(--border-width) solid var(--color-headline);
		content       : "";
		transform     : rotate(-45deg);
	}

	select {
		position         : relative;
		z-index          : 2;
		margin           : 0;

		// don't change background image, if you need to change it - use wrapper .select
		background-image : none;

		option {
			color : #000;
		}
	}
}

[type="checkbox"],
[type="radio"] {
	position       : absolute;
	width          : 1px;
	opacity        : 0;
	pointer-events : none;

	&,
	&:hover {
		border-color : var(--color-border);
		outline      : 0;
	}

	+ label {
		position       : relative;
		display        : inline-block;
		padding-left   : 2em;
		cursor         : pointer;
		letter-spacing : 0;
		line-height    : 1.7;

		&::before {
			position      : absolute;
			top           : 0.2em;
			left          : 0;
			display       : block;
			width         : 1.25em;
			height        : 1.25em;
			padding       : 0;
			border        : var(--border-width) solid var(--color-border);
			margin        : 0;
			background    : transparent;
			border-radius : 0.25rem;
			content       : "";
			transition    : border-color 0.2s ease, box-shadow 0.2s ease;
		}

		&::after {
			position      : absolute;
			top           : 0.3125em;
			left          : 0.4375em;
			display       : block;
			width         : 0.375em;
			height        : 0.75em;
			border-right  : var(--border-width) solid var(--color-accent);
			border-bottom : var(--border-width) solid var(--color-accent);
			content       : "";
			opacity       : 0;
			transform     : rotate(45deg);
			transition    : opacity 0.2s ease, border-color 0.2s ease, background-color 0.2s ease;
			visibility    : hidden;
		}
	}

	&:focus {
		+ label {
			&::before {
				border-color : var(--color-accent);
				box-shadow   : 0 0 0 3px var(--color-accent-alpha);
			}
		}
	}

	&:checked {
		+ label {
			&::before {
				border-color     : var(--color-accent);
				background-color : var(--color-accent);
			}

			&::after {
				border-color : var(--color-background);
				opacity      : 1;
				visibility   : visible;
			}
		}
	}
}

[type="radio"] {
	+ label {
		&::before {
			border-radius : 50%;
		}

		&::after {
			top              : 0.4375em;
			left             : 0.25em;
			width            : 0.75em;
			height           : 0.75em;
			border           : 0;
			background-color : var(--color-accent);
			border-radius    : 50%;
			transform        : none;
		}
	}

	&:checked {
		+ label {
			&::before {
				background-color : var(--color-background);
			}
		}
	}
}

.oneInputForm {
	position         : relative;
	width            : 100%;
	padding          : calc(var(--border-width) * 2);
	border           : var(--border-width) solid var(--color-border);
	margin           : 0 0 2em;
	background-color : var(--color-background);
	border-radius    : calc(var(--box-border-radius) + (var(--border-width) * 2));
	transition       : border-color 0.2s ease, box-shadow 0.2s ease;

	@media (min-width : $breakpoint-mobile-horizontal) {
		display       : flex;
		align-items   : center;
		border-radius : calc(var(--button-border-radius) + (var(--border-width) * 2));

		&:focus-within {
			border-color : var(--color-accent);
			box-shadow   : 0 0 0 3px var(--color-accent-alpha);
		}
	}

	&-input {
		width            : 100%;
		padding          : 0 0.618em;
		border           : 0;
		margin           : 0;
		background-color : transparent;

		@media (min-width : $breakpoint-mobile-horizontal) {
			min-height    : inherit;
			padding       : 0 1.618em;
			border-radius : var(--button-border-radius);
		}

		&:focus {
			box-shadow : none;
		}
	}

	&-button {
		width : 100%;

		@media (min-width : $breakpoint-mobile-horizontal) {
			width       : auto;
			flex-shrink : 0;
			box-shadow  : none;
		}

		&:focus {
			box-shadow : none;
		}
	}
}
